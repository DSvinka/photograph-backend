// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230130210621_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Database.Auth.UserModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Administrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("administrator");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2023, 1, 30, 21, 6, 21, 365, DateTimeKind.Utc).AddTicks(3090))
                        .HasColumnName("created");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2023, 1, 30, 21, 6, 21, 365, DateTimeKind.Utc).AddTicks(2831))
                        .HasColumnName("last_updated");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("0")
                        .HasColumnName("password_hash");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("0")
                        .HasColumnName("refresh_token");

                    b.Property<string>("Username")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("0")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_guild_settings_logs_model");

                    b.ToTable("guild_settings_logs_model", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Database.FileModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2023, 1, 30, 21, 6, 21, 365, DateTimeKind.Utc).AddTicks(4113))
                        .HasColumnName("created");

                    b.Property<int>("FileFolder")
                        .HasColumnType("integer")
                        .HasColumnName("file_folder");

                    b.Property<int>("FileType")
                        .HasColumnType("integer")
                        .HasColumnName("file_type");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("filename");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2023, 1, 30, 21, 6, 21, 365, DateTimeKind.Utc).AddTicks(3865))
                        .HasColumnName("last_updated");

                    b.HasKey("Id")
                        .HasName("pk_files");

                    b.ToTable("files", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Database.SettingsModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2023, 1, 30, 21, 6, 21, 365, DateTimeKind.Utc).AddTicks(5022))
                        .HasColumnName("created");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2023, 1, 30, 21, 6, 21, 365, DateTimeKind.Utc).AddTicks(4780))
                        .HasColumnName("last_updated");

                    b.Property<string>("SiteDescription")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("site_description");

                    b.Property<string>("SiteTitle")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("site_title");

                    b.HasKey("Id")
                        .HasName("pk_settings");

                    b.ToTable("settings", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
